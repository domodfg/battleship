(()=>{"use strict";var e={426:(e,r,n)=>{n.d(r,{Z:()=>y});var t=n(537),a=n.n(t),i=n(645),o=n.n(i),s=n(667),c=n.n(s),p=new URL(n(81),n.b),l=new URL(n(538),n.b),d=new URL(n(334),n.b),A=new URL(n(850),n.b),u=new URL(n(330),n.b),g=new URL(n(752),n.b),m=o()(a());m.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Signika+Negative:wght@300;400;500;600;700&display=swap);"]);var h=c()(p),f=c()(l),v=c()(d),B=c()(A),b=c()(u),C=c()(g);m.push([e.id,":root {\n    font-family: 'Signika Negative', sans-serif;\n    background-image: url("+h+");\n    background-size: cover;\n    background-position: center;\n    background-attachment: fixed;\n}\n\nbutton {\n    font-family: 'Signika Negative', sans-serif;\n    border: none;\n    border-radius: 10px;\n    padding: 0.5vw 3vw;\n    font-size: 1.5rem;\n    background-color: #15ffdf;\n}\n\nbutton:hover {\n    opacity: 0.7;\n}\n\n.container, .buttons {\n\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  max-width: 100vw;\n  gap: 7vw;\n}\n\n.buttons {\n    gap: 30.5vw;\n}\n\n.header {\n    display: grid;\n    height: 20vh;\n    grid-template-rows: 3fr 1fr;\n    align-items: center;\n    justify-items: center;\n    font-size: 1.7vw;\n}\n\n.message {\n    font-size: max(1.5vw, 15px);\n}\n\n.display {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    gap: 5vh;\n}\n\n.footer {\n    text-align: center;\n}\n\n.gameBoard,\n.gameBoard2 {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  width: 35vw;\n  aspect-ratio: 1/1;\n  border-top: 0.1px solid  #15ffdf;\n  border-left: 0.1px solid  #15ffdf;\n}\n\n.square {\n  border-right: 0.1px solid  #15ffdf;\n  border-bottom: 0.1px solid  #15ffdf;\n}\n\n.gameBoard2 .square:hover {\n   border: 2px red solid;\n   border-radius: 5px;\n}\n\n.missed {\n  background-color: #95ffdc;\n}\n\n.container .hit {\n  background-color: #ff5050;\n}\n\n.carrier {\n  background-image: url("+f+");\n}\n\n.battleship {\n  background-image: url("+v+");\n}\n\n.destroyer {\n  background-image: url("+B+");\n}\n\n.submarine {\n  background-image: url("+b+");\n}\n\n.patrolBoat {\n  background-image: url("+C+");\n}\n\n.carrier,\n.battleship,\n.destroyer,\n.submarine,\n.patrolBoat {\n  background-position: center;\n  background-size: 70%;\n  background-repeat: no-repeat;\n}\n\n.previewCarrier,\n.previewpatrolBoat,\n.previewBattleship,\n.previewDestroyer,\n.previewSubmarine\n {\n  background-color: rgba(0, 144, 211, 0.5);\n  border: none;\n  background-size: 3vw;\n  background-position: left;\n}\n\n.previewCarrierV,\n.previewpatrolBoatV,\n.previewBattleshipV,\n.previewDestroyerV,\n.previewSubmarineV{\n    background-color: rgba(0, 144, 211, 0.5);\n    border: none;\n    background-size: 3vw;\n    background-position: top;\n}\n\n.previewCarrier {\n  width: 500%;\n}\n\n.previewBattleship {\n  width: 400%;\n}\n\n.previewDestroyer {\n  width: 300%;\n}\n\n.previewSubmarine {\n  width: 300%;\n}\n\n.previewpatrolBoat {\n  width: 200%;\n}\n\n.previewCarrierV {\n  height: 500%;\n}\n\n.previewBattleshipV {\n  height: 400%;\n}\n\n.previewDestroyerV {\n  height: 300%;\n}\n\n.previewSubmarineV {\n  height: 300%;\n}\n\n.previewpatrolBoatV {\n  height: 200%;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,2CAA2C;IAC3C,yDAAkC;IAClC,sBAAsB;IACtB,2BAA2B;IAC3B,4BAA4B;AAChC;;AAEA;IACI,2CAA2C;IAC3C,YAAY;IACZ,mBAAmB;IACnB,kBAAkB;IAClB,iBAAiB;IACjB,yBAAyB;AAC7B;;AAEA;IACI,YAAY;AAChB;;AAEA;;EAEE,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;EACnB,gBAAgB;EAChB,QAAQ;AACV;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,2BAA2B;IAC3B,mBAAmB;IACnB,qBAAqB;IACrB,gBAAgB;AACpB;;AAEA;IACI,2BAA2B;AAC/B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,6BAA6B;IAC7B,QAAQ;AACZ;;AAEA;IACI,kBAAkB;AACtB;;AAEA;;EAEE,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC,WAAW;EACX,iBAAiB;EACjB,gCAAgC;EAChC,iCAAiC;AACnC;;AAEA;EACE,kCAAkC;EAClC,mCAAmC;AACrC;;AAEA;GACG,qBAAqB;GACrB,kBAAkB;AACrB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yDAA6C;AAC/C;;AAEA;EACE,yDAAuC;AACzC;;AAEA;EACE,yDAAmC;AACrC;;AAEA;EACE,yDAAsC;AACxC;;AAEA;EACE,yDAA4C;AAC9C;;AAEA;;;;;EAKE,2BAA2B;EAC3B,oBAAoB;EACpB,4BAA4B;AAC9B;;AAEA;;;;;;EAME,wCAAwC;EACxC,YAAY;EACZ,oBAAoB;EACpB,yBAAyB;AAC3B;;AAEA;;;;;IAKI,wCAAwC;IACxC,YAAY;IACZ,oBAAoB;IACpB,wBAAwB;AAC5B;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;AACd",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Signika+Negative:wght@300;400;500;600;700&display=swap');\n\n:root {\n    font-family: 'Signika Negative', sans-serif;\n    background-image: url(./water.jpg);\n    background-size: cover;\n    background-position: center;\n    background-attachment: fixed;\n}\n\nbutton {\n    font-family: 'Signika Negative', sans-serif;\n    border: none;\n    border-radius: 10px;\n    padding: 0.5vw 3vw;\n    font-size: 1.5rem;\n    background-color: #15ffdf;\n}\n\nbutton:hover {\n    opacity: 0.7;\n}\n\n.container, .buttons {\n\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  max-width: 100vw;\n  gap: 7vw;\n}\n\n.buttons {\n    gap: 30.5vw;\n}\n\n.header {\n    display: grid;\n    height: 20vh;\n    grid-template-rows: 3fr 1fr;\n    align-items: center;\n    justify-items: center;\n    font-size: 1.7vw;\n}\n\n.message {\n    font-size: max(1.5vw, 15px);\n}\n\n.display {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    gap: 5vh;\n}\n\n.footer {\n    text-align: center;\n}\n\n.gameBoard,\n.gameBoard2 {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  width: 35vw;\n  aspect-ratio: 1/1;\n  border-top: 0.1px solid  #15ffdf;\n  border-left: 0.1px solid  #15ffdf;\n}\n\n.square {\n  border-right: 0.1px solid  #15ffdf;\n  border-bottom: 0.1px solid  #15ffdf;\n}\n\n.gameBoard2 .square:hover {\n   border: 2px red solid;\n   border-radius: 5px;\n}\n\n.missed {\n  background-color: #95ffdc;\n}\n\n.container .hit {\n  background-color: #ff5050;\n}\n\n.carrier {\n  background-image: url(./aircraft-carrier.png);\n}\n\n.battleship {\n  background-image: url(./battleship.png);\n}\n\n.destroyer {\n  background-image: url(./cruise.png);\n}\n\n.submarine {\n  background-image: url(./submarine.png);\n}\n\n.patrolBoat {\n  background-image: url(./maritime-rescue.png);\n}\n\n.carrier,\n.battleship,\n.destroyer,\n.submarine,\n.patrolBoat {\n  background-position: center;\n  background-size: 70%;\n  background-repeat: no-repeat;\n}\n\n.previewCarrier,\n.previewpatrolBoat,\n.previewBattleship,\n.previewDestroyer,\n.previewSubmarine\n {\n  background-color: rgba(0, 144, 211, 0.5);\n  border: none;\n  background-size: 3vw;\n  background-position: left;\n}\n\n.previewCarrierV,\n.previewpatrolBoatV,\n.previewBattleshipV,\n.previewDestroyerV,\n.previewSubmarineV{\n    background-color: rgba(0, 144, 211, 0.5);\n    border: none;\n    background-size: 3vw;\n    background-position: top;\n}\n\n.previewCarrier {\n  width: 500%;\n}\n\n.previewBattleship {\n  width: 400%;\n}\n\n.previewDestroyer {\n  width: 300%;\n}\n\n.previewSubmarine {\n  width: 300%;\n}\n\n.previewpatrolBoat {\n  width: 200%;\n}\n\n.previewCarrierV {\n  height: 500%;\n}\n\n.previewBattleshipV {\n  height: 400%;\n}\n\n.previewDestroyerV {\n  height: 300%;\n}\n\n.previewSubmarineV {\n  height: 300%;\n}\n\n.previewpatrolBoatV {\n  height: 200%;\n}\n"],sourceRoot:""}]);const y=m},645:e=>{e.exports=function(e){var r=[];return r.toString=function(){return this.map((function(r){var n="",t=void 0!==r[5];return r[4]&&(n+="@supports (".concat(r[4],") {")),r[2]&&(n+="@media ".concat(r[2]," {")),t&&(n+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),n+=e(r),t&&(n+="}"),r[2]&&(n+="}"),r[4]&&(n+="}"),n})).join("")},r.i=function(e,n,t,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(t)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(o[c]=!0)}for(var p=0;p<e.length;p++){var l=[].concat(e[p]);t&&o[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),n&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=n):l[2]=n),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),r.push(l))}},r}},667:e=>{e.exports=function(e,r){return r||(r={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),r.hash&&(e+=r.hash),/["'() \t\n]|(%20)/.test(e)||r.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var r=e[1],n=e[3];if(!n)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(a," */"),o=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[r].concat(o).concat([i]).join("\n")}return[r].join("\n")}},379:e=>{var r=[];function n(e){for(var n=-1,t=0;t<r.length;t++)if(r[t].identifier===e){n=t;break}return n}function t(e,t){for(var i={},o=[],s=0;s<e.length;s++){var c=e[s],p=t.base?c[0]+t.base:c[0],l=i[p]||0,d="".concat(p," ").concat(l);i[p]=l+1;var A=n(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==A)r[A].references++,r[A].updater(u);else{var g=a(u,t);t.byIndex=s,r.splice(s,0,{identifier:d,updater:g,references:1})}o.push(d)}return o}function a(e,r){var n=r.domAPI(r);return n.update(e),function(r){if(r){if(r.css===e.css&&r.media===e.media&&r.sourceMap===e.sourceMap&&r.supports===e.supports&&r.layer===e.layer)return;n.update(e=r)}else n.remove()}}e.exports=function(e,a){var i=t(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var s=n(i[o]);r[s].references--}for(var c=t(e,a),p=0;p<i.length;p++){var l=n(i[p]);0===r[l].references&&(r[l].updater(),r.splice(l,1))}i=c}}},569:e=>{var r={};e.exports=function(e,n){var t=function(e){if(void 0===r[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}r[e]=n}return r[e]}(e);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(n)}},216:e=>{e.exports=function(e){var r=document.createElement("style");return e.setAttributes(r,e.attributes),e.insert(r,e.options),r}},565:(e,r,n)=>{e.exports=function(e){var r=n.nc;r&&e.setAttribute("nonce",r)}},795:e=>{e.exports=function(e){var r=e.insertStyleElement(e);return{update:function(n){!function(e,r,n){var t="";n.supports&&(t+="@supports (".concat(n.supports,") {")),n.media&&(t+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(t+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),t+=n.css,a&&(t+="}"),n.media&&(t+="}"),n.supports&&(t+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(t,e,r.options)}(r,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(r)}}}},589:e=>{e.exports=function(e,r){if(r.styleSheet)r.styleSheet.cssText=e;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(e))}}},538:(e,r,n)=>{e.exports=n.p+"e85a1e3622aba08c2164.png"},334:(e,r,n)=>{e.exports=n.p+"7c399499f221416f0bf1.png"},850:(e,r,n)=>{e.exports=n.p+"037b182407bb24090402.png"},752:(e,r,n)=>{e.exports=n.p+"2d06fafb93054cad8896.png"},330:(e,r,n)=>{e.exports=n.p+"384d18ab7174913c1ea6.png"},81:(e,r,n)=>{e.exports=n.p+"2ddfc819b3f685c4570a.jpg"}},r={};function n(t){var a=r[t];if(void 0!==a)return a.exports;var i=r[t]={id:t,exports:{}};return e[t](i,i.exports,n),i.exports}n.m=e,n.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return n.d(r,{a:r}),r},n.d=(e,r)=>{for(var t in r)n.o(r,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var r=n.g.document;if(!e&&r&&(r.currentScript&&(e=r.currentScript.src),!e)){var t=r.getElementsByTagName("script");t.length&&(e=t[t.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),r=n.n(e),t=n(795),a=n.n(t),i=n(569),o=n.n(i),s=n(565),c=n.n(s),p=n(216),l=n.n(p),d=n(589),A=n.n(d),u=n(426),g={};g.styleTagTransform=A(),g.setAttributes=c(),g.insert=o().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=l(),r()(u.Z,g),u.Z&&u.Z.locals&&u.Z.locals;const m=(e,r)=>{const n=Array(r);for(let e=0;e<n.length;e++)n[e]={position:e,status:"good"};const t=n;return{title:e,length:r,shipHealth:t,hit:e=>{t[e].status="hit"},isSunk:()=>t.every((e=>{if("hit"==e.status)return!0}))}},h=()=>{const e=Array(100);for(let r=0;r<e.length;r++){let n=r,t=r;const a=Math.floor(r/10);r>9&&(n=r-10*a),r>0&&(t=a),e[r]={occupied:"no",attacked:"no",X:n,Y:t}}const r=e=>{for(let r=0;r<e.shipHealth.length;r++)e.shipHealth[r]={position:r,status:"good"}},n=m("carrier",5),t=m("battleship",4),a=m("destroyer",3),i=m("submarine",3),o=m("patrolBoat",2);return{gameBoard:e,carrier:n,battleship:t,destroyer:a,submarine:i,patrolBoat:o,placeShip:(r,n)=>{const t=e.slice(n,n+r.length);if(!0!==t.every((e=>{if(e.Y===t[0].Y)return!0}))||!0!==(()=>{if(t.length===r.length)return!0})()||!0!==t.every((e=>{if("no"===e.occupied)return!0})))return"invalid position";r.shipHealth.forEach((e=>e.occupied=r)),e.splice(n,r.length,...r.shipHealth)},placeShipVertical:(r,n)=>{const t=Array(r.length);let a=n;for(let r=0;r<t.length;r++)t[r]=e[a],a+=10;const i=t;if(!0!==i.every((e=>void 0!==e))||!0!==i.every((e=>{if("no"===e.occupied)return!0})))return"invalid position";r.shipHealth.forEach((e=>e.occupied=r));for(let t=0;t<r.shipHealth.length;t++)n<=99&&(e[n]=r.shipHealth[t],n+=10)},receiveAttack:r=>{if("no"===e[r].attacked)e[r].attacked="yes";else{if("yes"===e[r].attacked)return!1;if("no"===e[r].occupied||"good"!==e[r].status)return!1;{const n=e[r].position;e[r].occupied.hit(n)}}},gameOverCheck:()=>!0===n.isSunk()&&!0===t.isSunk()&&!0===a.isSunk()&&!0===i.isSunk()&&!0===o.isSunk(),reset:()=>{for(let r=0;r<e.length;r++){let n=r,t=r;const a=Math.floor(r/10);r>9&&(n=r-10*a),r>0&&(t=a),e[r]={occupied:"no",attacked:"no",X:n,Y:t}}r(n),r(t),r(a),r(i),r(o)},resetShips:r}},f=(()=>{const e=h(),r=r=>e.gameBoard.filter((e=>e.occupied===r)).length>0;let n=!1;return{gameBoard:e,placeShip:t=>{if(!1===n)!0!==r(e.carrier)?e.placeShip(e.carrier,t):!0!==r(e.battleship)?e.placeShip(e.battleship,t):!0!==r(e.destroyer)?e.placeShip(e.destroyer,t):!0!==r(e.submarine)?e.placeShip(e.submarine,t):!0!==r(e.patrolBoat)&&e.placeShip(e.patrolBoat,t);else if(!0===n)if(!0!==r(e.carrier))e.placeShipVertical(e.carrier,t);else if(!0!==r(e.battleship))e.placeShipVertical(e.battleship,t);else if(!0!==r(e.destroyer))e.placeShipVertical(e.destroyer,t);else if(!0!==r(e.submarine))e.placeShipVertical(e.submarine,t);else{if(!0===r(e.patrolBoat))return;e.placeShipVertical(e.patrolBoat,t)}},attack:(e,r)=>!1!==e.receiveAttack(r),checkExisting:r,goVertical:()=>{n=!0!==n}}})(),v=(()=>{const e=h(),r=r=>e.gameBoard.filter((e=>e.occupied===r)).length>0,n=e=>Math.floor(Math.random()*e),t=(n,t)=>{let a=t;if(0===a)if(!0!==r(e.carrier))e.placeShip(e.carrier,n);else if(!0!==r(e.battleship))e.placeShip(e.battleship,n);else if(!0!==r(e.destroyer))e.placeShip(e.destroyer,n);else if(!0!==r(e.submarine))e.placeShip(e.submarine,n);else{if(!0===r(e.patrolBoat))return!1;e.placeShip(e.patrolBoat,n)}if(1===a)if(!0!==r(e.carrier))e.placeShipVertical(e.carrier,n);else if(!0!==r(e.battleship))e.placeShipVertical(e.battleship,n);else if(!0!==r(e.destroyer))e.placeShipVertical(e.destroyer,n);else if(!0!==r(e.submarine))e.placeShipVertical(e.submarine,n);else{if(!0===r(e.patrolBoat))return!1;e.placeShipVertical(e.patrolBoat,n)}};let a=!0;const i=(e,r)=>{a=!1===e.receiveAttack(r)};return{gameBoard:e,randomPlaceShip:()=>{for(;!1===r(e.patrolBoat);)t(n(100),n(2))},randomAttack:e=>{do{i(e,n(100))}while(!0===a)}}})(),B=(()=>{const e=document.querySelector(".container"),r=document.querySelector(".message"),n=document.createElement("div");n.classList.add("gameBoard");const t=document.createElement("div");t.classList.add("gameBoard2");const a=(e,r)=>{for(let n=0;n<e.gameBoard.length;n++){const t=r.querySelector(`[data="${n}"]`);e.gameBoard[n].occupied===e.carrier&&t.classList.add("carrier"),e.gameBoard[n].occupied===e.battleship&&t.classList.add("battleship"),e.gameBoard[n].occupied===e.destroyer&&t.classList.add("destroyer"),e.gameBoard[n].occupied===e.submarine&&t.classList.add("submarine"),e.gameBoard[n].occupied===e.patrolBoat&&t.classList.add("patrolBoat")}},i=(e,r)=>{for(let n=0;n<e.gameBoard.length;n++){const t=r.querySelector(`[data="${n}"]`);"yes"===e.gameBoard[n].attacked?t.classList.add("missed"):"hit"===e.gameBoard[n].status&&t.classList.add("hit")}};let o=!1;return{render:(r,n)=>{for(let e=0;e<r.gameBoard.length;e++){const r=document.createElement("div");r.setAttribute("data",e),r.classList.add("square"),n.appendChild(r)}e.appendChild(n)},renderPlayerShips:a,renderHit:i,player1:n,player2:t,startGame:()=>{t.querySelectorAll(".square").forEach((e=>{const a=parseInt(e.getAttribute("data"));e.addEventListener("click",(()=>{!0!==f.gameBoard.gameOverCheck()&&!0!==v.gameBoard.gameOverCheck()&&!0===o&&!1!==f.attack(v.gameBoard,a)&&(i(v.gameBoard,t),v.randomAttack(f.gameBoard),i(f.gameBoard,n),!0===f.gameBoard.gameOverCheck()&&!0!==v.gameBoard.gameOverCheck()&&(r.textContent="draw"),!0===f.gameBoard.gameOverCheck()?r.textContent="you lose":!0===v.gameBoard.gameOverCheck()&&(r.textContent="you win"))}))}))},prepForBattle:()=>{r.textContent="Place your ships on the left board";const e=n.querySelectorAll(".square"),t=document.querySelector(".rotate");let i=!1;t.addEventListener("click",(()=>{f.goVertical(),i=!1===i})),e.forEach((e=>{const t=parseInt(e.getAttribute("data"));e.addEventListener("click",(()=>{f.placeShip(t),a(f.gameBoard,n),!0===f.checkExisting(f.gameBoard.patrolBoat)&&(o=!0,r.textContent="Attack your enemies")})),e.addEventListener("mouseenter",(()=>{!1===i?!0!==f.checkExisting(f.gameBoard.carrier)?e.classList.add("previewCarrier"):!0!==f.checkExisting(f.gameBoard.battleship)?e.classList.add("previewBattleship"):!0!==f.checkExisting(f.gameBoard.destroyer)?e.classList.add("previewDestroyer"):!0!==f.checkExisting(f.gameBoard.submarine)?e.classList.add("previewSubmarine"):!0!==f.checkExisting(f.gameBoard.patrolBoat)&&e.classList.add("previewpatrolBoat"):!0===i&&(!0!==f.checkExisting(f.gameBoard.carrier)?e.classList.add("previewCarrierV"):!0!==f.checkExisting(f.gameBoard.battleship)?e.classList.add("previewBattleshipV"):!0!==f.checkExisting(f.gameBoard.destroyer)?e.classList.add("previewDestroyerV"):!0!==f.checkExisting(f.gameBoard.submarine)?e.classList.add("previewSubmarineV"):!0!==f.checkExisting(f.gameBoard.patrolBoat)&&e.classList.add("previewpatrolBoatV"))})),e.addEventListener("mouseleave",(()=>{e.classList.remove("previewCarrier"),e.classList.remove("previewBattleship"),e.classList.remove("previewDestroyer"),e.classList.remove("previewSubmarine"),e.classList.remove("previewpatrolBoat"),e.classList.remove("previewCarrierV"),e.classList.remove("previewBattleshipV"),e.classList.remove("previewDestroyerV"),e.classList.remove("previewSubmarineV"),e.classList.remove("previewpatrolBoatV")}))}))},removeClass:(e,r)=>{for(let n=0;n<e.gameBoard.length;n++){const e=r.querySelector(`[data="${n}"]`);e.classList.remove("carrier"),e.classList.remove("battleship"),e.classList.remove("destroyer"),e.classList.remove("submarine"),e.classList.remove("patrolBoat"),e.classList.remove("hit"),e.classList.remove("missed")}},setReady:()=>{o=!1},message:r}})();(()=>{const e=document.querySelector(".reset");return{play:()=>{B.render(f.gameBoard,B.player1),B.render(v.gameBoard,B.player2),B.prepForBattle(),v.randomPlaceShip(),B.startGame(),e.addEventListener("click",(()=>{B.message.textContent="Place your ships on the left board",v.gameBoard.reset(),f.gameBoard.reset(),B.setReady(),B.removeClass(v.gameBoard,B.player2),B.removeClass(f.gameBoard,B.player1),v.randomPlaceShip()}))}}})().play()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,